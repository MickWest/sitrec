<?php
/*
 * This is a simpler configuration file that replaces cachemaps-config.php, other config files, and some in-line settings
 * It also replaces the need for paths to be configured in config.js, as the client can fetch the configuration from here
 * TIP: to check for simple syntax errors, load this directly.
 * https://localhost/sitrec/sitRecServer/config.php
 * to get the configuration as JSON, add ?FETCH_CONFIG to the URL
 * https://localhost/sitrec/sitRecServer/config.php?FETCH_CONFIG

 */

require_once __DIR__ . '/injectEnv.php';

// Array of acceptable domains for caching (in cachemaps.php)
    $acceptable_domains = [
        'mickwest.com',  // for testing with the example above
        'c.tile.openstreetmap.org',
        'api.mapbox.com',
        'tiles.maps.eox.at',
        //     's3.amazonaws.com', // We use this directly, no cache
        'geoint.nrlssc.org',
        // Add more domains as needed
    ];

    // Array of acceptable image extensions for caching (in cachemaps.php)
    // remove this if you want to allow all extensions
    $acceptable_extensions = [ "png", "jpg", "tiff", "jpeg", "gif", "webp", "svg", "bmp", "ico", "tif"];
//
// import S3 credentials from shared.env
    $s3creds = [
        "accessKeyId"     => getenv("S3_ACCESS_KEY_ID"),
        "secretAccessKey" => getenv("S3_SECRET_ACCESS_KEY"),
        "region"          => getenv("S3_REGION"),
        "bucket"          => getenv("S3_BUCKET"),
        "acl"             => getenv("S3_ACL"),
    ];
    $useAWS = getenv("SAVE_TO_S3");

// From proxy.php
    // Lookup table for requests
    $request_url_map = array(
        "CURRENT_STARLINK" => "https://celestrak.org/NORAD/elements/supplemental/sup-gp.php?FILE=starlink&FORMAT=tle"
    );

// installation specific authentication
// should return a user id which can be used as a directory name
// or 0 if the user is not authenticated
// if no authentication is needed, I return 99999999
// if you want per-user authentication like this, then you'll need to modify this function
// or just delete this file, so user.php will return 99999998
//
// Note, calling this twice in one session seems to crash Xenforo
function getUserIDCustom()
{
    // a default user id for testing
    // and for if there's no xenforo
    $user_id = 99999999;

    if ($_SERVER['HTTP_HOST'] === 'localhost' || $_SERVER['SERVER_NAME'] === 'localhost') {
        // for local testing
    } else {
        $fileDir = getenv('XENFORO_PATH');
        if ($fileDir) {
            // check if the file exists
            $xf_file = $fileDir . 'src/XF.php';
            if (file_exists($xf_file)) {
                require($xf_file);
                XF::start($fileDir);
                $app = XF::setupApp('XF\Pub\App');
                $app->start();
                $user = XF::visitor();
                $user_id = $user->user_id;
            }
        }
    }
    return $user_id;
}
